---

---

<div
  class="min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8"
>
  <div class="max-w-md w-full space-y-8">
    <!-- Contenedor de login -->
    <div>
      <!-- Formulario de inicio de sesión -->
      <form id="login-form" class="space-y-6">
        <div>
          <label for="login-email" class="block text-5xl text-amber-50">🐈 Email</label>
          <input
            id="login-email"
            name="email"
            type="email"
            required
            class="mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
          />
        </div>

        <div>
          <label for="login-password" class="block text-5xl text-amber-50">🍕 Contraseña</label>
          <input
            id="login-password"
            name="password"
            type="password"
            required
            class="mt-1 appearance-none rounded-md relative block w-full px-3 py-2 border border-gray-300 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
          />
        </div>
        <div>
          <button
            type="submit"
            class="group relative w-full flex justify-center py-2 px-4 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed cursor-pointer"
          >
            <span id="login-spinner" class="hidden">
              <span class="animate-spin inline-block mr-3 text-lg">⏳</span>
            </span>
            <span id="login-text" class="block text-3xl text-amber-50 border-2 border-fuchsia-500 p-4 bg-fuchsia-900 rounded hover:bg-fuchsia-500 hover:border-fuchsia-300 hover:text-fuchsia-950">Iniciar sesión</span>
          </button>
        </div>
      </form>

      <!-- Área de mensajes -->
      <div id="message-area" class="mt-4 hidden">
        <div
          id="error-message"
          class="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded relative hidden"
        >
          <span id="error-text"></span>
        </div>
        <div
          id="success-message"
          class="bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded relative hidden"
        >
          <span id="success-text"></span>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // @ts-nocheck
  import { authService } from "../firebase/authService.js";
  import useEmergencyFoodStore from "../store/useStore.js";

  // Store
  const store = useEmergencyFoodStore();

  // Elementos del DOM
  const loginForm = document.getElementById("login-form");
  const messageArea = document.getElementById("message-area");
  const errorMessage = document.getElementById("error-message");
  const successMessage = document.getElementById("success-message");
  const errorText = document.getElementById("error-text");
  const successText = document.getElementById("success-text");

  // Funciones de utilidad
  function showMessage(message, isError = false) {
    messageArea.classList.remove("hidden");
    if (isError) {
      errorMessage.classList.remove("hidden");
      successMessage.classList.add("hidden");
      errorText.textContent = message;
    } else {
      successMessage.classList.remove("hidden");
      errorMessage.classList.add("hidden");
      successText.textContent = message;
    }

    // Ocultar mensaje después de 5 segundos
    setTimeout(() => {
      messageArea.classList.add("hidden");
      errorMessage.classList.add("hidden");
      successMessage.classList.add("hidden");
    }, 5000);
  }
  function setLoading(isLoading) {
    const spinner = document.getElementById("login-spinner");
    const text = document.getElementById("login-text");
    const button = document.querySelector('#login-form button[type="submit"]');

    if (isLoading) {
      spinner.classList.remove("hidden");
      button.disabled = true;
    } else {
      spinner.classList.add("hidden");
      button.disabled = false;
    }
  }
  // Manejo del formulario de login
  loginForm.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    const email = formData.get("email");
    const password = formData.get("password");

    setLoading(true);
    store.setLoading(true);

    try {
      const user = await authService.signIn(email, password);
      store.setUser({
        uid: user.uid,
        email: user.email,
        displayName: user.displayName,
      });

      // Redirigir al dashboard
      window.location.href = "/dashboard";
    } catch (error) {
      showMessage(error.message, true);
    } finally {
      setLoading(false);
      store.setLoading(false);
    }
  });

  // Verificar si el usuario ya está autenticado
  authService.onAuthStateChanged((user) => {
    if (user) {
      store.setUser({
        uid: user.uid,
        email: user.email,
        displayName: user.displayName,
      });
      window.location.href = "/dashboard";
    }
  });
</script>
